{"version":3,"sources":["../esm2015/projects/user-lib/src/lib/components/change-password-form/change-password-form.component.ts","../projects/user-lib/src/lib/models/CurrentUser.ts","../projects/user-lib/src/lib/services/users.service.ts","../esm2015/projects/user-lib/src/lib/components/current-user/current-user.component.ts","../esm2015/projects/user-lib/src/lib/components/login-form/login-form.component.ts","../esm2015/projects/user-lib/src/lib/components/user-profile/user-profile.component.ts","../../../node_modules/tslib/tslib.es6.js","../projects/user-lib/src/lib/actions/current-user.actions.ts","../projects/user-lib/src/lib/services/current-user-state.service.ts","../../projects/user-lib/src/lib/user-lib.module.ts","../projects/user-lib/src/lib/services/allowed-roles-guard.service.ts","../projects/user-lib/src/lib/services/authorization-interceptor.service.ts","../projects/user-lib/src/lib/services/logged-in-guard.service.ts"],"names":["ChangePasswordFormComponent","fb","this","changePassword","EventEmitter","prototype","ngOnInit","changePasswordForm","group","currentPassword","newPassword","confirmPassword","validators","confirmValue","doChangePassword","valid","emit","value","Component","args","selector","template","FormBuilder","Output","CurrentUser","username","userKind","displayName","roles","addRole","roleName","Error","push","hasRole","roleNames","intersection","length","UsersService","httpClient","accessToken","currentUser","loginEmployee","password","_this","post","kind","pipe","tap","userResult","localStorage","refreshToken","map","forEach","role","refreshUser","get","userRefresh","of","oldPassword","getCurrentUser","getAccessToken","getRefreshToken","logoutUser","Injectable","providedIn","HttpClient","CurrentUserComponent","router","usersSvc","Object","defineProperty","_b","_a","navigateToProfile","navigateByUrl","navigateToLogout","navigateToLogin","Router","LoginFormComponent","loginFormSubmitted","login","clear","loginForm","invalid","Validators","required","doLogin","doClear","reset","UserProfileComponent","userProfile","Input","__decorate","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","create","SetCurrentUser","type","ClearCurrentUser","LoginUser","LogoutUser","CurrentUserStateService","setCurrentUser","ctx","action","patchState","clearCurrentUser","loginUser","dispatch","ClearErrorMessage","SetErrorMessage","catchError","err","status","Action","State","name","defaults","NgxsFeatureModule","NgxsModule","forFeature","NgModule","declarations","imports","CommonModule","ReactiveFormsModule","HttpClientModule","MatListModule","MatToolbarModule","MatSidenavModule","MatButtonModule","MatIconModule","MatCardModule","MatFormFieldModule","MatInputModule","MatMenuModule","MatTableModule","MatSnackBarModule","exports","AllowedRolesGuardService","snackBar","canActivate","route","state","data","snackBarRef_1","open","title","onAction","subscribe","dismiss","MatSnackBar","AuthorizationInterceptorService","withAccessToken","req","clone","headers","set","withRefreshToken","method","intercept","next","url","endsWith","handle","caught","HttpErrorResponse","switchMap","throwError","LoggedInGuardService","parseUrl"],"mappings":"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","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { ChangePasswordForm } from '../../models/ChangePasswordForm';\nimport { confirmValue } from '@t4d-wnow/shared-lib';\n\n@Component({\n  selector: 'app-change-password-form',\n  templateUrl: './change-password-form.component.html',\n  styleUrls: ['./change-password-form.component.css']\n})\nexport class ChangePasswordFormComponent implements OnInit {\n\n  @Output()\n  changePassword = new EventEmitter<ChangePasswordForm>();\n\n  changePasswordForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.changePasswordForm = this.fb.group({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n    }, { validators: [confirmValue('newPassword', 'confirmPassword')] });\n  }\n\n  public doChangePassword() {\n    if (this.changePasswordForm.valid) {\n      this.changePassword.emit(this.changePasswordForm.value);\n    }\n  }\n\n}\n","import { intersection } from 'lodash-es';\n\nexport interface ICurrentUser {\n  username: string;\n  userKind: string;\n  displayName: string;\n  roles: string[];\n}\n\nexport class CurrentUser implements ICurrentUser {\n\n  public username: string;\n  public userKind: string;\n  public displayName: string;\n  public roles: string[];\n\n  constructor(username: string, userKind: string, displayName: string) {\n    this.username = username;\n    this.userKind = userKind;\n    this.displayName = displayName;\n    this.roles = [];\n  }\n\n  public addRole(roleName: string): CurrentUser {\n    if (!roleName) throw new Error('role name cannot be empty');\n    this.roles.push(roleName);\n    return this;\n  }\n\n  public hasRole(roleNames: string[]): boolean {\n    return intersection(this.roles, roleNames).length > 0;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\nimport { UserResult } from '../models/UserResult';\nimport { UserRefresh } from '../models/UserRefresh';\nimport { CurrentUser } from '../models/CurrentUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  private accessToken: string | null = null;\n  private currentUser: CurrentUser | null = null;\n\n  constructor(private httpClient: HttpClient) { }\n\n  public loginEmployee(username: string, password: string): Observable<CurrentUser> {\n\n    return this.httpClient\n      .post<UserResult>(\n        '/api/users/login',\n        { username, password, kind: 'employee' })\n      .pipe(\n        tap(userResult => {\n          this.accessToken = userResult.accessToken;\n          localStorage.refreshToken = userResult.refreshToken;\n        }),\n        map(userResult => {\n          const currentUser = new CurrentUser(userResult.username, userResult.userKind, userResult.displayName);\n          userResult.roles.forEach(role => currentUser.addRole(role));\n          return currentUser;\n        }),\n        tap(currentUser => {\n          this.currentUser = currentUser\n        }),\n      );\n  }\n\n  public refreshUser(): Observable<Observable<boolean>> {\n    return this.httpClient.get<UserRefresh>('/api/users/refresh').pipe(\n      tap(userRefresh => {\n        this.accessToken = userRefresh.accessToken;\n        localStorage.refreshToken = userRefresh.refreshToken;\n      }),\n      map(() => of(true)),\n    );\n  }\n\n  public changePassword(username: string, userKind: string, oldPassword: string, newPassword: string): Observable<{}> {\n    return this.httpClient.post<{}>(\n      '/api/users/change-password',\n      {\n        username, userKind, oldPassword, newPassword,\n      });\n  }\n\n  public getCurrentUser(): CurrentUser | null {\n    return this.currentUser;\n  }\n\n  public getAccessToken(): string | null {\n    return this.accessToken;\n  }\n\n  public getRefreshToken(): string | null {\n    return localStorage.refreshToken;\n  }\n\n  public logoutUser(): void {\n    this.accessToken = null;\n    this.currentUser = null;\n    localStorage.refreshToken = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-current-user',\n  templateUrl: './current-user.component.html',\n  styleUrls: ['./current-user.component.css']\n})\nexport class CurrentUserComponent implements OnInit {\n\n  get loggedIn(): boolean {\n    return !!this.usersSvc.getCurrentUser();\n  }\n\n  get displayName(): string {\n    return this.usersSvc.getCurrentUser()?.displayName ?? '';\n  }\n\n  get username(): string {\n    return this.usersSvc.getCurrentUser()?.username ?? '';\n  }\n\n  constructor(private router: Router, private usersSvc: UsersService) { }\n\n  ngOnInit(): void {\n  }\n\n  public navigateToProfile(): Promise<boolean> {\n    return this.router.navigateByUrl('/profile');\n  }\n\n  public navigateToLogout(): Promise<boolean> {\n    return this.router.navigateByUrl('/logout');\n  }\n\n  public navigateToLogin(): Promise<boolean> {\n    return this.router.navigateByUrl('/login');\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LoginForm } from '../../models/LoginForm';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  loginForm!: FormGroup;\n  loginFormSubmitted = false;\n\n  @Output()\n  login = new EventEmitter<LoginForm>();\n\n  @Output()\n  clear = new EventEmitter<void>();\n\n  get showLoginFormValidationSummary() {\n    return this.loginForm.invalid && this.loginFormSubmitted;\n  }\n\n  get showUsernameError() {\n    const usernameFormControl = this.loginForm.get('username');\n    return usernameFormControl!.invalid;\n  }\n\n  get showPasswordError() {\n    const passwordFormControl = this.loginForm.get('password');\n    return passwordFormControl!.invalid;\n  }\n\n  constructor(private fb: FormBuilder) { }\n\n  // username: 'adodsworth'\n  // password: 'testpass'\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['adodsworth', { validators: [Validators.required] }],\n      password: ['testpass', { validators: [Validators.required] }],\n    });\n  }\n\n  doLogin(): void {\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) return;\n    this.login.emit(this.loginForm!.value);\n  }\n\n  doClear(): void {\n    this.loginForm!.reset();\n    this.clear.emit();\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { UserProfile } from '../../models/UserProfile';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  @Input()\n  public userProfile: UserProfile | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICurrentUser } from '../models/CurrentUser';\n\nexport class SetCurrentUser {\n  static readonly type = '[User] Set Current User';\n  constructor(public currentUser: ICurrentUser) { }\n}\n\nexport class ClearCurrentUser {\n  static readonly type = '[User] Clear Current User';\n}\n\nexport class LoginUser {\n  static readonly type = '[User] Login User';\n  constructor(public username: string, public password: string) { }\n}\n\nexport class LogoutUser {\n  static readonly type = '[User] Logout User';\n}","import { Injectable } from '@angular/core';\nimport { State, Action, StateContext } from '@ngxs/store';\nimport { tap, catchError } from 'rxjs/operators';\n\nimport { CurrentUserState } from '../models/CurrentUserState';\nimport { SetCurrentUser, ClearCurrentUser, LoginUser, LogoutUser } from '../actions/current-user.actions';\nimport { UsersService } from '../services/users.service';\n\nimport { SetErrorMessage, ClearErrorMessage } from '@t4d-wnow/shared-lib';\n\n@State<CurrentUserState>({\n  name: 'currentUser',\n  defaults: {\n    username: '',\n    userKind: '',\n    displayName: '',\n    roles: [] as string[],\n  },\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentUserStateService {\n\n  constructor(private usersSvc: UsersService) { }\n\n  @Action(SetCurrentUser)\n  setCurrentUser(ctx: StateContext<CurrentUserState>, action: SetCurrentUser) {\n    ctx.patchState(action.currentUser);\n  }\n\n  @Action(ClearCurrentUser)\n  clearCurrentUser(ctx: StateContext<CurrentUserState>) {\n    ctx.patchState({\n      username: '',\n      userKind: '',\n      displayName: '',\n      roles: [] as string[],\n    });\n  }\n\n  @Action(LoginUser)\n  loginUser(ctx: StateContext<CurrentUserState>, action: LoginUser) {\n\n    return this.usersSvc.loginEmployee(action.username, action.password).pipe(\n      tap(() => {\n        const currentUser = this.usersSvc.getCurrentUser();\n        if (currentUser) {\n          ctx.dispatch([\n            new SetCurrentUser(currentUser),\n            new ClearErrorMessage(),\n          ]);\n        } else {\n          ctx.dispatch([\n            new ClearCurrentUser(),\n            new SetErrorMessage('Unable to retrieve current user.'),\n          ]);\n        }\n      }),\n      catchError((err: any) => {\n        if (err.status === 404) {\n          ctx.dispatch([\n            new ClearCurrentUser(),\n            new SetErrorMessage('Username and password not found.'),\n          ]);\n        } else {\n          ctx.dispatch([\n            new ClearCurrentUser(),\n            new SetErrorMessage('Unknown login error.'),\n          ]);\n        }\n        return err;\n      }),\n    );\n  }\n\n  @Action(LogoutUser)\n  logoutUser(ctx: StateContext<CurrentUserState>) {\n    ctx.dispatch([\n      new ClearCurrentUser(),\n      new ClearErrorMessage(),\n    ]);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\n\nimport { NgxsModule } from '@ngxs/store';\n\nimport { ChangePasswordFormComponent } from './components/change-password-form/change-password-form.component';\nimport { CurrentUserComponent } from './components/current-user/current-user.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { CurrentUserStateService } from './services/current-user-state.service';\n\nexport const NgxsFeatureModule = NgxsModule.forFeature([CurrentUserStateService]);\n\n@NgModule({\n  declarations: [\n    ChangePasswordFormComponent,\n    CurrentUserComponent,\n    LoginFormComponent,\n    UserProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatListModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSnackBarModule,\n    NgxsFeatureModule,\n  ],\n  exports: [\n    ChangePasswordFormComponent,\n    CurrentUserComponent,\n    LoginFormComponent,\n    UserProfileComponent,\n  ],\n})\nexport class UserLibModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { UsersService } from '../services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllowedRolesGuardService implements CanActivate {\n\n  constructor(private usersSvc: UsersService, private snackBar: MatSnackBar) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot)\n    : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    if (!this.usersSvc.getCurrentUser()?.hasRole(route.data.roles)) {\n      const snackBarRef = this.snackBar.open(\n        `You are not allowed to navigate to the ${route.data.title}.`,\n        'Dismiss');\n      snackBarRef.onAction().subscribe(() => {\n        snackBarRef.dismiss();\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationInterceptorService implements HttpInterceptor {\n\n  constructor(private usersSvc: UsersService) { }\n\n  withAccessToken(req: HttpRequest<any>): HttpRequest<any> {\n    return req.clone({\n      headers: req.headers.set(\n        'Authorization',\n        'Bearer ' + this.usersSvc.getAccessToken(),\n      ),\n    });\n  }\n\n  withRefreshToken(req: HttpRequest<any>): HttpRequest<any> {\n    return req.clone({\n      method: 'GET',\n      headers: req.headers.set(\n        'Authorization',\n        'Bearer ' + this.usersSvc.getRefreshToken(),\n      ),\n    });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (req.url.endsWith('/api/users/login')) {\n      return next.handle(req);\n    }\n\n    if (req.url.endsWith('/api/users/refresh')) {\n      return next.handle(this.withRefreshToken(req));\n    }\n\n    return next.handle(this.withAccessToken(req)).pipe(\n      catchError((err, caught) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            return this.usersSvc.refreshUser()\n              .pipe(\n                switchMap(() => next.handle(this.withAccessToken(req)))\n              );\n          } else {\n            return throwError(err);\n          }\n        }\n        return caught;\n      })\n    );\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot, CanActivate,\n  RouterStateSnapshot, UrlTree, Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuardService implements CanActivate {\n\n  constructor(private usersSvc: UsersService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n      if (!this.usersSvc.getCurrentUser()) {\n        return this.router.parseUrl('/login');\n      } else {\n        return true;\n      }\n\n  }\n}\n"]}